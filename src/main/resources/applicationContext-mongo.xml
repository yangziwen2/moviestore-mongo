<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mongo="http://www.springframework.org/schema/data/mongo"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
        http://www.springframework.org/schema/data/mongo http://www.springframework.org/schema/data/mongo/spring-mongo-1.0.xsd
    ">
    
    <context:property-placeholder location="classpath:mongo.properties"/>
    
	<mongo:mongo id="mongo" host="${mongo.host}" port="${mongo.port}"/>
	
	<mongo:db-factory id="mongoDbFactory" dbname="bookshelf" mongo-ref="mongo"/>
	
	<bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
  		<constructor-arg name="mongoDbFactory" ref="mongoDbFactory"/>
	</bean>
	
	<context:component-scan base-package="net.yangziwen.moviestore.dao"></context:component-scan>
	
</beans>